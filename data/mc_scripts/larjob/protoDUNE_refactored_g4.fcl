#include "services_refactored_pdune.fcl"
#include "services_dune.fcl"
//#include "largeantmodules_dune.fcl"
//#include "photpropservices_dune.fcl"
//#include "opticaldetectormodules_dune.fcl"

#include "scintillationtime_tool.fcl"

process_name: G4

services:
{
  TFileService: { fileName: "g4_protoDUNE_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {} # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_info
  @table::protodune_simulation_services

  DetectorHolder: {}
  ActionHolder: {}
  PhysicsListHolder: {}
  PhysicsList: {
    PhysicsListName: "QGSP_BERT"
    DumpList: true
    enableNeutronLimit: false
    NeutronTimeLimit: 0.0
    NeutronKinELimit: 0.0
    enableStepLimit: true
    enableOptical: false
    enableCerenkov: false
    CerenkovStackPhotons: false
    CerenkovMaxNumPhotons: 100
    CerenkovMaxBetaChange: 10.0
    enableScintillation: false
    ScintillationStackPhotons: false
    ScintillationByParticleType: false
    ScintillationTrackInfo: false
    ScintillationTrackSecondariesFirst: false
    enableAbsorption: false
    enableRayleigh: false
    enableMieHG: false
    enableBoundary: false
    enableWLS: false
    BoundaryInvokeSD: false
    Verbosity: 1
    WLSProfile: delta
  }
  LArG4Detector : 
  {
    category      : "world"
    gdmlFileName_ : "protodune_v7_refactored_nowires.gdml"
    volumeNames   : ["volTPCActive", "volTPCActiveOuter"] # list of volumes for which the stepLimit should be set
    stepLimits    : [0.3, 0.3] # corresponding stepLimits in mm for the volumes in the volumeNames list
  }

  MCTruthEventAction: {service_type: "MCTruthEventActionService"}
  ParticleListAction: {service_type:  "ParticleListActionService"
                       EnergyCut: 1e-5 # Kinetic Energy cut in [MeV]
                       keepEMShowerDaughters: true
                       storeTrajectories: true
                       keepGenTrajectories: ["generator"] # list of generator labels for which we want to store
                                                          # trajectory points. The protodune beam label is simply
                                                          # "generator"
                       keepOnlyPrimaryFullTrajectories : false  # (defaults to false in larg4) If set to true, only
                                                                # the particles with MCTruth process == "primary" and
                                                                # their descendants will have the full set of trajetory
                                                                # points stored. Particles descending from primaries with
                                                                # MCTruth process != "primary" will not have a full set
                                                                # of trajectory points stored -- only their start and
                                                                # end points. This filter only applies to the generator
                                                                # labels listed in the keepGenTrajectories. E.g, for the
                                                                # beam generator, no "primaryBackground" particles or their
                                                                # descendants would have a full set of traj. points. if
                                                                # this is set to true.
                       SparsifyTrajectories: true # call SparsifyTrajectory() method on MCParticles with full trajectories
                                                  # being stored. This helps reduce memory usage in the root output stage
                                                  # if there are many trajectory points.
                                      
                      }
}
## -- NuRandomService:
services.NuRandomService.policy: "perEvent"

#services.PhotonVisibilityService:               @local::protodunev4_photonvisibilityservice
#services.LArG4Parameters.UseLitePhotons:        true

#services.Geometry.GDML: "protodune_v7.gdml"
#services.Geometry.ROOT: "protodune_v7.gdml"

source:
{
  module_type: RootInput
  maxEvents:  30000
  fileNames: ["gen_protoDUNE.root"]
}

physics:
{

  producers:
  {

    #retain largeant name for compatibility
    largeant: { module_type: "larg4Main"
                enableVisualization: false
                macroPath: ".:./macros"
                visMacro: "vis.mac"
    }
    rns: {
      module_type: "RandomNumberSaver"
    }

    IonAndScint:
    {
        module_type:           "IonAndScint"
        Instances:             "LArG4DetectorServicevolTPCActive;LArG4DetectorServicevolTPCActiveOuter" # separated by semicolon
        ISCalcAlg:             "Separate" #"NEST"
    }

    PDFastSim:
    {
       module_type:            "PDFastSimPVS"
       #module_type:            "PDFastSimPAR"
       SimulationLabel:        "IonAndScint"
       DoSlowComponent:        true
       ScintTimeTool:          @local::ScintTimeLAr
    }

  }

  analyzers: {
    # CheckSimEnergyDeposit: {   module_type: CheckSimEnergyDeposit
    #   hist_dir: "HistoDir" 
    # }
    # CheckMCParticle: {   module_type: CheckMCParticle
    #   hist_dir: "HistoDir2" 
    # }
    # CheckAuxDetHit: {   module_type: CheckAuxDetHit
    #   hist_dir: "HistoDir3" 
    # }
    # ISCalculationAna: {             module_type: ISCalculationAna
    #       EDepModuleLabel:        "largeant:LArG4DetectorServicevolTPCActive"
    # }
    # SimDriftedElectronClusterAna: { module_type: SimDriftedElectronClusterAna
    #       EDepModuleLabel:        "elecDrift"
    # }		   

    # ISCalcAna:
    # {
    #     module_type:             ISCalcAna
    #     SimulationLabel:         "largeant:LArG4DetectorServicevolTPCActive"
    #     // ISCalcAlg:               "NEST"
    #     ISCalcAlg:               "Separate"
    # }
    # 
    # SimPh:
    # {
    #     module_type:             "SimPhotonCounter"
    #     Verbosity:               5
    #     InputModule:             "PDFastSimPVS:pvs" 
    #     MakeAllPhotonsTree:      true
    #     MakeDetectedPhotonsTree: true
    #     MakeOpDetsTree:          true
    #     MakeOpDetEventsTree:     true
    # }

  }

 simulate: [  rns, largeant, IonAndScint, PDFastSim ]

 stream1: [ out1 ]


 trigger_paths: [  simulate ] 
 end_paths:     [  stream1  ]  

}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_g4.root"
   dataTier:    "simulated"
   #outputCommands: [ "keep *" ]
   outputCommands: [ "keep *", "drop sim::SimEnergyDeposits_largeant_*_G4"]
   #fastCloning: false #will fail if the split level is not the same as for the gen stage, so turn it off
   compressionLevel: 1 #zlib argument (0-9) 
   #basketSize: 8192 #[Byte] buffer size at 8k
   #splitLevel: 0 #reduces number of buffers
   #treeMaxVirtualSize: 1 #[Byte] limits number of buffers/branch to 1 (default is 10)
 }
}

